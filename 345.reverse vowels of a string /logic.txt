since we have to check char by char we will convert the string into array of char by using char [] word = s.toCharArray
so that now we can point to each char by their idx

word[start] means “the character at position start in the array.”
word[end] means “the character at position end in the array.”

now we will take two pointers at first and last idx 

String vowels = "aeiouAEIOU";

while (start < end && vowels.indexOf(word[start]) == -1) {
    start++;
}


this means we will keep moving the start pointer until it is less than end pointer value and also is not a vowel 

Now, indexOf is a method that belongs to the String class in Java. It checks whether a given character (or substring) exists inside that string, and if so, it returns the index (position) where it first appears. If it doesn’t find it, it returns -1.

vowels.indexOf(word[start]) looks for that character inside "aeiouAEIOU".

If it returns -1, that means it’s not a vowel, so you move start forward until you actually land on a vowel.

and here we are not using <= as it will not give us the desired result because it will swap one more time 
